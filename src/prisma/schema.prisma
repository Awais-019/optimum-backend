// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(uuid())
  name              String
  gender            GENDER?
  email             String             @unique
  phone             String?            @unique
  password          String
  role              ROLE
  email_verified    Boolean            @default(false)
  phone_verified    Boolean            @default(false)
  profile_completed Boolean            @default(false)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  Verificationcode  Verificationcode[]
  Patient           Patient?
  Doctor            Doctor?
}

model Patient {
  id     String   @id @default(uuid())
  DOB    DateTime
  user   User     @relation(fields: [userId], references: [id])
  userId String   @unique
}

model Doctor {
  id               String     @id @default(uuid())
  user             User       @relation(fields: [userId], references: [id])
  experience       Int
  appointmentTypes String[]   @default(["PHYSICAL"])
  userId           String     @unique
  Location         Location?
  Document         Document[]
  Charges          Charges[]
}

model Location {
  id         String @id @default(uuid())
  clinicName String
  address    String
  city       String
  state      String
  Doctor     Doctor @relation(fields: [doctorId], references: [id])
  doctorId   String @unique
}

model Document {
  id       String @id @default(uuid())
  name     String
  Doctor   Doctor @relation(fields: [doctorId], references: [id])
  doctorId String
}

model Charges {
  id               String           @id @default(uuid())
  appointment_type APPOINTMENTTYPES @default(PHYSICAL)
  charges          Float
  Doctor           Doctor           @relation(fields: [doctorId], references: [id])
  doctorId         String
}

model Verificationcode {
  id        String   @id @default(uuid())
  code      Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  expiresAt DateTime
}

enum GENDER {
  MALE
  FEMALE
}

enum ROLE {
  ADMIN
  DOCTOR
  PATIENT
}

enum APPOINTMENTTYPES {
  PHYSICAL
  VIRTUAL
}
